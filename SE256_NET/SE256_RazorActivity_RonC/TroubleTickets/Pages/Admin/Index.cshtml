@page
@model TroubleTickets.Pages.Admin.IndexModel
@{
    ViewData["Title"] = "Index";
}


<h1>Login Page</h1>

<form method="post">

    @*We are using regular HTML input, but with binding to specific class properties and a more user friendly description*@

    <div class="form-group">
        <label asp-for="tAdmin.TicketAdmin_Email"></label>
        <input asp-for="tAdmin.TicketAdmin_Email" type="text" class="form-control" placeholder="Username" />
        <span asp-validation-for="tAdmin.TicketAdmin_Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="tAdmin.TicketAdmin_PW"></label>
        <input asp-for="tAdmin.TicketAdmin_PW" type="password" class="form-control" placeholder="Password" />
        <span asp-validation-for="tAdmin.TicketAdmin_PW" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

</form>

@*Scripts to incorporate client side validation input of the fields in this view*@

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

@{ 
    //This will show the feedback if the login fails
    if (Model.tAdmin != null && Model.tAdmin.Feedback != null)
            {
                <h1>Results</h1>
                <p>@Model.tAdmin.Feedback</p>
            }
}